version: '3'

services:
  nginx:
    build:
      context: ./nginx
    container_name: looking-glass_nginx
    image: looking_glass_nginx:latest
    ports:
      - "80:80"
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/static
    depends_on:
      - frontend
      - backend

  db:
    build:
      context: ./postgres
    container_name: looking-glass_postgres
    image: looking_glass_postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=database
    expose:
      - 5432
    restart: always

  frontend:
    build:
      context: ./frontend
    container_name: looking-glass_frontend
    image: looking_glass_frontend:latest
    expose:
      - 3000
    restart: always
    environment:
      - NODE_ENV=development
    stdin_open: true
    tty: true

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: looking-glass_backend
    image: looking_glass_backend:latest
    volumes:
      - static_volume:/app/static
      - "D:/Repos/PoPrikolu/LookingGlass:/app/disk_images" # Монтирование папки с дампами
    #expose:
    #  - 8000
    ports:
      - "8000:8000"
    restart: always
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings
      - API_URL=127.0.0.1
      - API_PORT=80
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=database
    depends_on:
      - db
      - redis
      - elasticsearch

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile.worker
    container_name: looking-glass_celery
    image: looking_glass_worker:latest
    command: celery -A core.celery worker --loglevel=info
    volumes:
      - static_volume:/app/static
      - "D:/Repos/PoPrikolu/LookingGlass:/app/disk_images" # Монтирование папки с дампами
    restart: always
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings
      - API_URL=127.0.0.1
      - API_PORT=80
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=database
    depends_on:
      - redis
      - backend

  redis:
    build:
      context: ./redis
    container_name: looking-glass_redis_master
    image: looking_glass_redis:latest
    command: redis-server --save 20 1 --loglevel warning
    expose:
      - "6379"
    volumes:
      - redis-master-data:/data
    restart: always
    healthcheck:
      test: redis-cli ping
      interval: 30s
      timeout: 10s
      retries: 5

  redis-slave:
    build:
      context: ./redis
    image: looking_glass_redis:latest
    depends_on:
      - redis
    command: >
      sh -c "redis-server --slaveof looking-glass_redis_master 6379 --save 20 1 --loglevel warning"
    expose:
      - "6379"
    volumes:
      - redis-slave-data:/data
    restart: always
    healthcheck:
      test: redis-cli -h redis-slave ping
      interval: 30s
      timeout: 10s
      retries: 5

  elasticsearch:
    build:
      context: ./elasticsearch
    container_name: looking-glass_elasticsearch
    image: looking_glass_elasticsearch:latest
    environment:
      - discovery.type=single-node
    expose:
      - 9200
    restart: always

volumes:
  postgres_data:
  static_volume:
  redis-master-data:
  redis-slave-data:
