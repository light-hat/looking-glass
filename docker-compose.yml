version: '3'

services:
  nginx:
    build:
      context: ./nginx  # Сборка nginx с кастомным конфигом
    container_name: looking-glass_nginx
    image: looking-glass/nginx
    ports:
      - "80:80"
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend

  db:
    build:
      context: ./postgres  # Для локальной сборки образа Postgres
    container_name: looking-glass_postgres
    image: looking-glass/postgres
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    expose:
      - 5432
    restart: always

  frontend:
    build:
      context: ./frontend
    container_name: looking-glass_frontend
    image: looking-glass/frontend
    volumes:
      - ./frontend:/app
    expose:
      - 3000
    restart: always
    environment:
      - NODE_ENV=development
    stdin_open: true
    tty: true

  backend:
    build:
      context: ./backend
    container_name: looking-glass_backend
    image: looking-glass/backend
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
    expose:
      - 8000
    restart: always
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings
    depends_on:
      - db
      - redis
      - elasticsearch

  celery:
    build:
      context: ./backend
    container_name: looking-glass_celery
    image: looking-glass/celery
    command: celery -A core.celery worker --loglevel=info
    volumes:
      - ./backend:/app
    restart: always
    depends_on:
      - redis
      - backend

  redis:
    build:
      context: ./redis  # Локальная сборка Redis, если требуется кастомизация
    container_name: looking-glass_redis
    image: looking-glass/redis
    expose:
      - 6379
    restart: always

  elasticsearch:
    build:
      context: ./elasticsearch  # Для локальной сборки Elasticsearch
    container_name: looking-glass_elasticsearch
    image: looking-glass/elasticsearch
    environment:
      - discovery.type=single-node
    expose:
      - 9200
    restart: always
